<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://jtin25.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://jtin25.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-08-05T07:14:54+00:00</updated><id>https://jtin25.github.io/feed.xml</id><title type="html">Justin Tse</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://jtin25.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://jtin25.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://jtin25.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[Weâ€™re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://jtin25.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://jtin25.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://jtin25.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Land surface temperature time series analysis</title><link href="https://jtin25.github.io/blog/2015/code/" rel="alternate" type="text/html" title="Land surface temperature time series analysis"/><published>2015-07-15T15:09:00+00:00</published><updated>2015-07-15T15:09:00+00:00</updated><id>https://jtin25.github.io/blog/2015/code</id><content type="html" xml:base="https://jtin25.github.io/blog/2015/code/"><![CDATA[<p>This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting. It supports more than 100 languages. This example is in C++. All you have to do is wrap your code in markdown code tags:</p> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// This is an example JavaScript code block</span>
<span class="kd">var</span> <span class="nx">cities</span> <span class="o">=</span> <span class="nx">ee</span><span class="p">.</span><span class="nc">FeatureCollection</span><span class="p">(</span><span class="dl">'</span><span class="s1">projects/ee-tsejustin-geo4dev/assets/UScities</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">aoi</span> <span class="o">=</span> <span class="nx">cities</span><span class="p">.</span><span class="nf">filterMetadata</span><span class="p">(</span><span class="dl">'</span><span class="s1">NAME</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">equals</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">Stockton</span><span class="dl">'</span><span class="p">);</span>
<span class="nb">Map</span><span class="p">.</span><span class="nf">addLayer</span><span class="p">(</span><span class="nx">aoi</span><span class="p">,</span><span class="dl">''</span><span class="p">,</span> <span class="dl">'</span><span class="s1">aoi</span><span class="dl">'</span><span class="p">);</span>
<span class="nb">Map</span><span class="p">.</span><span class="nf">centerObject</span><span class="p">(</span><span class="nx">aoi</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</code></pre></div></div> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">YEAR_RANGE</span> <span class="o">=</span> <span class="nx">ee</span><span class="p">.</span><span class="nx">Filter</span><span class="p">.</span><span class="nf">calendarRange</span><span class="p">(</span><span class="mi">2013</span><span class="p">,</span> <span class="mi">2023</span><span class="p">,</span> <span class="dl">'</span><span class="s1">year</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">//Import the LST image collection</span>
<span class="kd">var</span> <span class="nx">LST</span> <span class="o">=</span> <span class="nx">ee</span><span class="p">.</span><span class="nc">ImageCollection</span><span class="p">(</span><span class="dl">"</span><span class="s2">MODIS/061/MOD11A1</span><span class="dl">"</span><span class="p">)</span>
                  <span class="p">.</span><span class="nf">filter</span><span class="p">(</span><span class="nx">YEAR_RANGE</span><span class="p">)</span>
                  <span class="p">.</span><span class="nf">select</span><span class="p">(</span><span class="dl">'</span><span class="s1">LST_Day_1km</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="s1">LST_Night_1km</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="s1">QC_Day</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="s1">QC_Night</span><span class="dl">'</span><span class="p">)</span>
                  <span class="p">.</span><span class="nf">filterBounds</span><span class="p">(</span><span class="nx">aoi</span><span class="p">);</span>

<span class="c1">//kelvin to celcius</span>
<span class="kd">function</span> <span class="nf">LSTScaleFactors</span><span class="p">(</span><span class="nx">image</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">thermalBands</span> <span class="o">=</span> <span class="nx">image</span><span class="p">.</span><span class="nf">select</span><span class="p">(</span><span class="dl">'</span><span class="s1">LST_Day_1km</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="s1">LST_Night_1km</span><span class="dl">'</span><span class="p">).</span><span class="nf">multiply</span><span class="p">(</span><span class="mf">0.02</span><span class="p">)</span>
  <span class="p">.</span><span class="nf">subtract</span><span class="p">(</span><span class="mf">273.15</span><span class="p">);</span> 
  <span class="k">return</span> <span class="nx">image</span><span class="p">.</span><span class="nf">addBands</span><span class="p">(</span><span class="nx">thermalBands</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">LST_scaled</span> <span class="o">=</span> <span class="nx">LST</span><span class="p">.</span><span class="nf">map</span><span class="p">(</span><span class="nx">LSTScaleFactors</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div> <p>Create a bitmask function and apply it.</p> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">bitwiseExtract</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">input</span><span class="p">,</span> <span class="nx">fromBit</span><span class="p">,</span> <span class="nx">toBit</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">maskSize</span> <span class="o">=</span> <span class="nx">ee</span><span class="p">.</span><span class="nc">Number</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nf">add</span><span class="p">(</span><span class="nx">toBit</span><span class="p">).</span><span class="nf">subtract</span><span class="p">(</span><span class="nx">fromBit</span><span class="p">)</span>
  <span class="kd">var</span> <span class="nx">mask</span> <span class="o">=</span> <span class="nx">ee</span><span class="p">.</span><span class="nc">Number</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nf">leftShift</span><span class="p">(</span><span class="nx">maskSize</span><span class="p">).</span><span class="nf">subtract</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
  <span class="k">return</span> <span class="nx">input</span><span class="p">.</span><span class="nf">rightShift</span><span class="p">(</span><span class="nx">fromBit</span><span class="p">).</span><span class="nf">bitwiseAnd</span><span class="p">(</span><span class="nx">mask</span><span class="p">)</span>
<span class="p">}</span>

<span class="c1">// Apply QA mask to both LST Day and LST Night</span>
<span class="kd">var</span> <span class="nx">applyQaMask</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">image</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">lstDay</span> <span class="o">=</span> <span class="nx">image</span><span class="p">.</span><span class="nf">select</span><span class="p">(</span><span class="dl">'</span><span class="s1">LST_Day_1km</span><span class="dl">'</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">qcDay</span> <span class="o">=</span> <span class="nx">image</span><span class="p">.</span><span class="nf">select</span><span class="p">(</span><span class="dl">'</span><span class="s1">QC_Day</span><span class="dl">'</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">lstNight</span> <span class="o">=</span> <span class="nx">image</span><span class="p">.</span><span class="nf">select</span><span class="p">(</span><span class="dl">'</span><span class="s1">LST_Night_1km</span><span class="dl">'</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">qcNight</span> <span class="o">=</span> <span class="nx">image</span><span class="p">.</span><span class="nf">select</span><span class="p">(</span><span class="dl">'</span><span class="s1">QC_Night</span><span class="dl">'</span><span class="p">);</span>

  <span class="c1">// Apply masks for LST Day</span>
  <span class="kd">var</span> <span class="nx">qaMaskDay</span> <span class="o">=</span> <span class="nf">bitwiseExtract</span><span class="p">(</span><span class="nx">qcDay</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="nf">lte</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">dataQualityMaskDay</span> <span class="o">=</span> <span class="nf">bitwiseExtract</span><span class="p">(</span><span class="nx">qcDay</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">).</span><span class="nf">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">lstErrorMaskDay</span> <span class="o">=</span> <span class="nf">bitwiseExtract</span><span class="p">(</span><span class="nx">qcDay</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">).</span><span class="nf">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">maskDay</span> <span class="o">=</span> <span class="nx">qaMaskDay</span><span class="p">.</span><span class="nf">and</span><span class="p">(</span><span class="nx">dataQualityMaskDay</span><span class="p">).</span><span class="nf">and</span><span class="p">(</span><span class="nx">lstErrorMaskDay</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">lstDayMasked</span> <span class="o">=</span> <span class="nx">lstDay</span><span class="p">.</span><span class="nf">updateMask</span><span class="p">(</span><span class="nx">maskDay</span><span class="p">);</span>

  <span class="c1">// Apply masks for LST Night</span>
  <span class="kd">var</span> <span class="nx">qaMaskNight</span> <span class="o">=</span> <span class="nf">bitwiseExtract</span><span class="p">(</span><span class="nx">qcNight</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="nf">lte</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">dataQualityMaskNight</span> <span class="o">=</span> <span class="nf">bitwiseExtract</span><span class="p">(</span><span class="nx">qcNight</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">).</span><span class="nf">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">lstErrorMaskNight</span> <span class="o">=</span> <span class="nf">bitwiseExtract</span><span class="p">(</span><span class="nx">qcNight</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">).</span><span class="nf">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">maskNight</span> <span class="o">=</span> <span class="nx">qaMaskNight</span><span class="p">.</span><span class="nf">and</span><span class="p">(</span><span class="nx">dataQualityMaskNight</span><span class="p">).</span><span class="nf">and</span><span class="p">(</span><span class="nx">lstErrorMaskNight</span><span class="p">);</span>
  <span class="kd">var</span> <span class="nx">lstNightMasked</span> <span class="o">=</span> <span class="nx">lstNight</span><span class="p">.</span><span class="nf">updateMask</span><span class="p">(</span><span class="nx">maskNight</span><span class="p">);</span>

  <span class="c1">// Add the masked bands back to the image</span>
  <span class="k">return</span> <span class="nx">image</span><span class="p">.</span><span class="nf">addBands</span><span class="p">([</span><span class="nx">lstDayMasked</span><span class="p">.</span><span class="nf">rename</span><span class="p">(</span><span class="dl">'</span><span class="s1">LST_Day_Masked</span><span class="dl">'</span><span class="p">),</span> <span class="nx">lstNightMasked</span><span class="p">.</span><span class="nf">rename</span><span class="p">(</span><span class="dl">'</span><span class="s1">LST_Night_Masked</span><span class="dl">'</span><span class="p">)],</span> <span class="kc">null</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">LST_Masked</span> <span class="o">=</span> <span class="nx">LST_scaled</span><span class="p">.</span><span class="nf">map</span><span class="p">(</span><span class="nx">applyQaMask</span><span class="p">);</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[an example of a blog post with some code]]></summary></entry></feed>